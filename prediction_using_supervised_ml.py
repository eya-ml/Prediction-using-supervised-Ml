# -*- coding: utf-8 -*-
"""Prediction using supervised Ml.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Auy3W07AU_lywc1k5F1KFnHbCN8LcMWI

# **Imports:**
"""

import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

"""# **Reading data**"""

df=pd.read_csv("http://bit.ly/w-data")
df.head()

"""# **Plot data**"""

df.plot(x="Hours",y="Scores",style="x",color="red")
plt.xlabel('Hours')  
plt.ylabel('Score')  
plt.show()

"""# **Separate data into attributes and labels**"""

input = df.iloc[:,:-1].values
output = df.iloc[:,1].values

"""# **split data to training and test**"""

input_train, input_test, output_train, output_test = train_test_split(input, output, 
                            test_size=0.2, random_state=0)

"""# **Training Model(Regression)**"""

model = LinearRegression()  
model.fit(input_train, output_train)

regression = model.coef_*input+model.intercept_

plt.scatter(input, output)
plt.plot(input, regression);
plt.show()

"""# **Make prediction**"""

output_pred = model.predict(input_test)

input_test

"""# **Verfication**"""

studies=[[9.25]]
Predicted_Score = model.predict(studies)
print ("predicted score for 9.25 hours/day studies", Predicted_Score[0])

"""# **Evaluate model**"""

from sklearn import metrics  
mae = metrics.mean_absolute_error(output_test, output_pred)
mse = metrics.mean_squared_error(output_test, output_pred)
r2 = metrics.r2_score(output_test, output_pred)

print("The model performance for testing set")
print("--------------------------------------")
print('MAE is {}'.format(mae))
print('MSE is {}'.format(mse))
print('R2 score is {}'.format(r2))

"""Mean absolute error is 4.18 which shows that our algorithm is not that accurate, but it can still make good predictions. 

The value of the mean squared error is 21.59 which shows that we have some outliers.

The R2  score is 0.94 and it shows that our model  fit data well because r2 is close to 1
"""